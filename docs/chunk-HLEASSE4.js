import{C as B,J as b,O as x,Ob as F,Qb as m,Rb as _,T as I,a as y,b as S,c as C,i as M,l as g,q as L,r as D}from"./chunk-YEQZILZB.js";var w=class f{loadingSubject=new M({isLoading:!1,phase:"",percentage:0,current:0,total:0});loading$=this.loadingSubject.asObservable();showLoading(e,i=100){this.loadingSubject.next({isLoading:!0,phase:e,percentage:0,current:0,total:i})}updateProgress(e){let i=this.loadingSubject.value;this.loadingSubject.next(S(y(y({},i),e),{isLoading:!0}))}hideLoading(){this.loadingSubject.next({isLoading:!1,phase:"",percentage:100,current:0,total:0})}get isLoading(){return this.loadingSubject.value.isLoading}static \u0275fac=function(i){return new(i||f)};static \u0275prov=x({token:f,factory:f.\u0275fac,providedIn:"root"})};var E=class f{constructor(e,i,t,n){this.http=e;this.storageService=i;this.indexedDBService=t;this.loadingService=n;this.loadData()}dataLoaded=new M(!1);dataLoading=!1;partsCache=new Map;colorsCache=new Map;elementsCache=new Map;minifigsCache=new Map;inventoryPartsCache=new Map;inventoryMinifigsCache=new Map;cacheInitialized=!1;inventories=[];inventoryParts=[];inventoryMinifigs=[];inventorySets=[];parts=[];colors=[];partCategories=[];partRelationships=[];elements=[];minifigs=[];sets=[];themes=[];CSV_VERSION="2.0.0";loadData(){return C(this,null,function*(){if(!this.dataLoading){this.dataLoading=!0;try{this.loadingService.updateProgress({isLoading:!0,phase:"Initializing...",percentage:0});let e=null;if(m.isSupported()&&!this.indexedDBService.isDisabledForSession()){this.loadingService.updateProgress({phase:"Checking cache...",percentage:5});try{if(yield this.indexedDBService.isCSVCacheValid())console.log("\u2705 Cache validation passed - using cached data"),this.loadingService.updateProgress({phase:"Loading from cache...",percentage:15}),this.loadingService.updateProgress({phase:"Reading cached data from IndexedDB...",percentage:25}),e=yield this.indexedDBService.loadCSVDataCache((t,n)=>{this.loadingService.updateProgress({phase:t,percentage:n})}),this.loadingService.updateProgress({phase:"Cache data loaded successfully",percentage:85});else if(console.log("\u274C Cache validation failed - loading from CSV files"),this.loadingService.updateProgress({phase:"Cache invalid, loading CSV files...",percentage:12}),e=yield this.loadFromCSVFilesWithProgress(),e&&m.isSupported()&&!this.indexedDBService.isDisabledForSession())try{yield this.saveToIndexedDB(e)}catch(t){console.warn("Failed to save to cache after CSV load:",t)}}catch(i){console.warn("IndexedDB operation failed, falling back to CSV files:",i),this.loadingService.updateProgress({phase:"Cache error, loading CSV files...",percentage:12}),e=yield this.loadFromCSVFilesWithProgress()}}else console.log("IndexedDB not available, loading from CSV files"),this.loadingService.updateProgress({phase:"Loading CSV files...",percentage:12}),e=yield this.loadFromCSVFilesWithProgress();this.loadingService.updateProgress({phase:"Organizing data structures...",percentage:92}),this.loadDataIntoMemory(e),this.loadingService.updateProgress({phase:"Building search indexes...",percentage:96}),this.initializeCache(),this.loadingService.updateProgress({phase:"Completed!",percentage:100}),this.dataLoaded.next(!0),this.dataLoading=!1,setTimeout(()=>{this.loadingService.hideLoading()},1e3)}catch(e){console.error("Error loading data:",e),this.loadingService.hideLoading(),this.dataLoaded.next(!0),this.dataLoading=!1}}})}loadFromCSVFilesWithProgress(){return C(this,null,function*(){this.loadingService.updateProgress({phase:"Loading manifest...",percentage:20});let e;try{let r=yield this.http.get("assets/data/manifest.json",{responseType:"text"}).toPromise();e=JSON.parse(r||"{}")}catch{console.warn("No manifest file found, assuming single files for all CSVs"),e={inventories:1,inventory_parts:1,inventory_minifigs:1,inventory_sets:1,parts:1,colors:1,part_categories:1,part_relationships:1,elements:1,minifigs:1,sets:1,themes:1}}this.loadingService.updateProgress({phase:"Preparing file requests...",percentage:22});let i=[{key:"inventories",baseName:"inventories"},{key:"inventoryParts",baseName:"inventory_parts"},{key:"inventoryMinifigs",baseName:"inventory_minifigs"},{key:"inventorySets",baseName:"inventory_sets"},{key:"parts",baseName:"parts"},{key:"colors",baseName:"colors"},{key:"partCategories",baseName:"part_categories"},{key:"partRelationships",baseName:"part_relationships"},{key:"elements",baseName:"elements"},{key:"minifigs",baseName:"minifigs"},{key:"sets",baseName:"sets"},{key:"themes",baseName:"themes"}],t=0;i.forEach(({baseName:r})=>{t+=e[r]||1}),this.loadingService.updateProgress({phase:`Downloading ${t} CSV files...`,percentage:25,current:0,total:t});let n=[],a=0;for(let{key:r,baseName:c}of i){let s=e[c]||1;if(s===1){let l=`assets/data/${c}.csv`;try{let h=yield this.http.get(l,{responseType:"text"}).pipe(L(r==="inventoryParts"?12e4:6e4)).toPromise();n.push({key:r,csv:h,part:1,totalParts:1}),a++;let v=Math.round(25+a/t*20);this.loadingService.updateProgress({phase:`Downloaded ${c}.csv`,percentage:v,current:a,total:t})}catch(h){console.error(`Failed to download ${l}:`,h),n.push({key:r,csv:"",part:1,totalParts:1}),a++}}else for(let l=1;l<=s;l++){let h=`assets/data/${c}_part_${l}.csv`;try{let v=yield this.http.get(h,{responseType:"text"}).pipe(L(6e4)).toPromise();n.push({key:r,csv:v,part:l,totalParts:s}),a++;let P=Math.round(25+a/t*20);this.loadingService.updateProgress({phase:`Downloaded ${c}_part_${l}.csv`,percentage:P,current:a,total:t})}catch(v){console.error(`Failed to download ${h}:`,v),n.push({key:r,csv:"",part:l,totalParts:s}),a++}}}this.loadingService.updateProgress({phase:"Processing CSV data...",percentage:45});let o={};i.forEach(({key:r})=>{o[r]=[]});let d=new Map;n.forEach(r=>{r&&r.csv&&(d.has(r.key)||d.set(r.key,[]),d.get(r.key).push(r))});let u=0,p=d.size;for(let[r,c]of d){try{let s=Math.round(45+u/p*5);if(this.loadingService.updateProgress({phase:`Processing ${r}...`,percentage:s,current:u+1,total:p}),c.length===1)o[r]=this.parseCSV(c[0].csv),console.log(`Parsed ${r}: ${o[r].length} records`);else{console.log(`Combining ${c.length} parts for ${r}`),c.sort((h,v)=>h.part-v.part);let l=[];for(let h=0;h<c.length;h++){let v=c[h],P=this.parseCSV(v.csv);if(h===0?l=[...P]:l=l.concat(P),c.length>1){let V=Math.round(45+u/p*5+(h+1)/c.length*(5/p));this.loadingService.updateProgress({phase:`Processing ${r} part ${h+1}/${c.length}...`,percentage:V})}P.length=0,h<c.length-1&&(yield new Promise(V=>setTimeout(V,10)))}o[r]=l,console.log(`Combined ${r}: ${l.length} total records`)}}catch(s){console.error(`Error parsing ${r}:`,s),o[r]=[]}u++}return this.loadingService.updateProgress({phase:"CSV processing completed",percentage:50}),o})}loadDataIntoMemory(e){this.inventories=e.inventories||[],this.inventoryParts=e.inventoryParts||[],this.inventoryMinifigs=e.inventoryMinifigs||[],this.inventorySets=e.inventorySets||[],this.parts=e.parts||[],this.colors=e.colors||[],this.partCategories=e.partCategories||[],this.partRelationships=e.partRelationships||[],this.elements=e.elements||[],this.minifigs=e.minifigs||[],this.sets=e.sets||[],this.themes=e.themes||[]}initializeCache(){this.cacheInitialized||(this.loadingService.updateProgress({phase:"Indexing parts for quick lookup...",percentage:96.5}),this.parts.forEach(e=>{this.partsCache.set(e.part_num,e)}),this.loadingService.updateProgress({phase:"Indexing colors...",percentage:97}),this.colors.forEach(e=>{this.colorsCache.set(e.id,e)}),this.loadingService.updateProgress({phase:"Indexing elements and part-color combinations...",percentage:97.5}),this.elements.forEach(e=>{this.elementsCache.set(e.element_id,e),this.elementsCache.set(`${e.part_num}_${e.color_id}`,e)}),this.loadingService.updateProgress({phase:"Indexing minifigures...",percentage:98}),this.minifigs.forEach(e=>{this.minifigsCache.set(e.fig_num,e)}),this.loadingService.updateProgress({phase:"Building inventory parts index...",percentage:98.5}),this.inventoryParts.forEach(e=>{this.inventoryPartsCache.has(e.inventory_id)||this.inventoryPartsCache.set(e.inventory_id,[]),this.inventoryPartsCache.get(e.inventory_id).push(e)}),this.loadingService.updateProgress({phase:"Building inventory minifigures index...",percentage:99}),this.inventoryMinifigs.forEach(e=>{this.inventoryMinifigsCache.has(e.inventory_id)||this.inventoryMinifigsCache.set(e.inventory_id,[]),this.inventoryMinifigsCache.get(e.inventory_id).push(e)}),this.loadingService.updateProgress({phase:"Finalizing indexes...",percentage:99.5}),this.cacheInitialized=!0)}refreshCSVData(){return C(this,null,function*(){try{return m.isSupported()&&(yield this.indexedDBService.clearCSVCache(),this.indexedDBService.resetSessionState()),this.dataLoaded.next(!1),this.cacheInitialized=!1,this.dataLoading=!1,this.partsCache.clear(),this.colorsCache.clear(),this.elementsCache.clear(),this.minifigsCache.clear(),this.inventoryPartsCache.clear(),this.inventoryMinifigsCache.clear(),yield this.loadData(),!0}catch(e){return console.error("Error refreshing CSV data:",e),!1}})}parseCSV(e){let t=e.replace(/\r\n/g,`
`).replace(/\r/g,`
`).split(`
`);if(t.length<2)return[];let n=this.parseCSVLine(t[0]).map(o=>o.trim().replace(/\r/g,"").replace(/\n/g,"").replace(/[\u0000-\u001F\u007F-\u009F]/g,"")),a=[];for(let o=1;o<t.length;o++){let d=t[o].trim();if(d)try{let u=this.parseCSVLine(d),p={};n.forEach((r,c)=>{let s=u[c]?.trim().replace(/\r/g,"").replace(/\n/g,"");s==null||s===""||(s==="true"||s==="false"||s==="True"||s==="False"?p[r]=s.toLowerCase()==="true":!isNaN(Number(s))&&s!==""?p[r]=Number(s):p[r]=s)}),Object.keys(p).length>0&&a.push(p)}catch(u){console.warn("Error parsing CSV line:",d,u)}}return a}parseCSVLine(e){let i=[],t="",n=!1,a=0;for(;a<e.length;){let o=e[a],d=e[a+1];o==='"'&&n&&d==='"'?(t+='"',a+=2):o==='"'?(n=!n,a++):o===","&&!n?(i.push(t.trim().replace(/\r/g,"")),t="",a++):(t+=o,a++)}return i.push(t.trim().replace(/\r/g,"")),i}isDataLoaded(){return this.dataLoaded.asObservable()}getSet(e,i=1){let t=this.sets.find(n=>n.set_num===e);if(t){let n=this.inventories.filter(a=>a.set_num===e).map(a=>a.version).sort((a,o)=>a-o);return g(S(y({},t),{versions:n.length>0?n:[1]}))}return g(void 0)}getSetInventory(e,i=1){let t=this.inventories.find(n=>n.set_num===e&&n.version===i);return g(t)}getSetInventoryPartsBySetNum(e,i=1){return this.getSetInventory(e,i).pipe(b(t=>t?this.getInventoryPartsFromCache(t.id):g([])))}getSetInventoryMinifigsBySetNum(e,i=1){return this.getSetInventory(e,i).pipe(b(t=>t?this.getInventoryMinifigsFromCache(t.id):g([])))}getInventoryPartsFromCache(e){if(!this.cacheInitialized)return this.dataLoaded.pipe(B(1),b(()=>{this.cacheInitialized||this.initializeCache();let t=this.inventoryPartsCache.get(e)||[];return g(t)}));let i=this.inventoryPartsCache.get(e)||[];return g(i)}getInventoryMinifigsFromCache(e){if(!this.cacheInitialized)return this.dataLoaded.pipe(B(1),b(()=>{this.cacheInitialized||this.initializeCache();let t=this.inventoryMinifigsCache.get(e)||[];return g(t)}));let i=this.inventoryMinifigsCache.get(e)||[];return g(i)}getSetsPaginated(e=1,i=24,t,n){return this.cacheInitialized?this.getSetsPaginatedInternal(e,i,t,n):this.dataLoaded.pipe(b(()=>this.getSetsPaginatedInternal(e,i,t,n)))}getSetsPaginatedInternal(e,i,t,n){let a=new Map;this.inventories.forEach(s=>{a.has(s.set_num)||a.set(s.set_num,[]),a.get(s.set_num).push(s.version)}),a.forEach((s,l)=>{a.set(l,s.sort((h,v)=>h-v))});let o=this.sets.map(s=>S(y({},s),{versions:a.get(s.set_num)||[1]}));if(t&&t.trim()){let s=t.toLowerCase();o=o.filter(l=>l.name.toLowerCase().includes(s)||l.set_num.toLowerCase().includes(s))}n&&(o=o.filter(s=>s.year===n));let d=o.length,u=(e-1)*i,p=u+i,r=o.slice(u,p),c=p<d;return g({sets:r,totalCount:d,hasNext:c})}getCurrentParts(){return this.parts}getCurrentColors(){return this.colors}getCurrentMinifigs(){return this.minifigs}getCurrentElements(){return this.elements}getCurrentSets(){return this.sets}getCurrentInventories(){return this.inventories}getCurrentInventoryParts(){return this.inventoryParts}getCurrentThemes(){return this.themes}getPartsByNumbers(e){let i=e.map(t=>this.partsCache.get(t)).filter(t=>t!==void 0);return g(i)}getColorsByIds(e){let i=e.map(t=>this.colorsCache.get(t)).filter(t=>t!==void 0);return g(i)}getElementsByIds(e){let i=e.map(t=>this.elementsCache.get(t)).filter(t=>t!==void 0);return g(i)}getMinifigsByNumbers(e){let i=e.map(t=>this.minifigsCache.get(t)).filter(t=>t!==void 0);return g(i)}getSetsFromCSV(){return this.getSetsPaginated(1,999999).pipe(D(e=>e.sets))}getSetInventoryPartsFromCSV(e){return this.getInventoryPartsFromCache(e)}getSetInventoryMinifigsFromCSV(e){return this.getInventoryMinifigsFromCache(e)}getPartCategoriesByIds(e){let i=this.partCategories.filter(t=>e.includes(t.id));return g(i)}getThemesByIds(e){let i=this.themes.filter(t=>e.includes(t.id));return g(i)}getCSVCacheInfo(){return C(this,null,function*(){try{return m.isSupported()?yield this.indexedDBService.getCSVCacheInfo():{exists:!1}}catch(e){return console.warn("Failed to get CSV cache info:",e),{exists:!1}}})}getCurrentDataStats(){return{inventories:this.inventories.length,inventoryParts:this.inventoryParts.length,inventoryMinifigs:this.inventoryMinifigs.length,inventorySets:this.inventorySets.length,parts:this.parts.length,colors:this.colors.length,partCategories:this.partCategories.length,partRelationships:this.partRelationships.length,elements:this.elements.length,minifigs:this.minifigs.length,sets:this.sets.length,themes:this.themes.length}}getTotalRecords(e){let i=0;return["inventories","inventoryParts","inventoryMinifigs","inventorySets","parts","colors","partCategories","partRelationships","elements","minifigs","sets","themes"].forEach(n=>{Array.isArray(e[n])&&(i+=e[n].length)}),i}saveToIndexedDB(e){return C(this,null,function*(){try{if(!m.isSupported()||this.indexedDBService.isDisabledForSession()){console.warn("IndexedDB not available for CSV caching");return}let i=S(y({},e),{timestamp:Date.now(),version:this.CSV_VERSION});yield this.indexedDBService.saveCSVDataCache(i,t=>{let n=t.phase||`Caching ${Math.round(t.current/t.total*100)}% complete...`;this.loadingService.updateProgress({phase:n,percentage:Math.round(85+t.percentage*.15),current:t.current,total:t.total})}),console.log("Successfully cached CSV data to IndexedDB")}catch(i){console.error("Failed to cache CSV data to IndexedDB:",i)}})}static \u0275fac=function(i){return new(i||f)(I(F),I(_),I(m),I(w))};static \u0275prov=x({token:f,factory:f.\u0275fac,providedIn:"root"})};export{w as a,E as b};
