import{C as _,J as C,O as w,Ob as T,Qb as S,Rb as N,T as I,a as f,b as P,c as y,i as M,l as g,q as x,r as E}from"./chunk-KNHI7XVO.js";var L=class m{loadingSubject=new M({isLoading:!1,phase:"",percentage:0,current:0,total:0});loading$=this.loadingSubject.asObservable();showLoading(e,i=100){this.loadingSubject.next({isLoading:!0,phase:e,percentage:0,current:0,total:i})}updateProgress(e){let i=this.loadingSubject.value;this.loadingSubject.next(P(f(f({},i),e),{isLoading:!0}))}hideLoading(){this.loadingSubject.next({isLoading:!1,phase:"",percentage:100,current:0,total:0})}get isLoading(){return this.loadingSubject.value.isLoading}static \u0275fac=function(i){return new(i||m)};static \u0275prov=w({token:m,factory:m.\u0275fac,providedIn:"root"})};var O=class m{constructor(e,i,t,r){this.http=e;this.storageService=i;this.indexedDBService=t;this.loadingService=r;this.loadData()}dataLoaded=new M(!1);dataLoading=!1;partsCache=new Map;colorsCache=new Map;elementsCache=new Map;minifigsCache=new Map;inventoryPartsCache=new Map;inventoryMinifigsCache=new Map;cacheInitialized=!1;inventories=[];inventoryParts=[];inventoryMinifigs=[];inventorySets=[];parts=[];colors=[];partCategories=[];partRelationships=[];elements=[];minifigs=[];sets=[];themes=[];CSV_VERSION="2.0.0";loadData(){return y(this,null,function*(){if(!this.dataLoading){this.dataLoading=!0;try{this.loadingService.updateProgress({isLoading:!0,phase:"Initializing...",percentage:0});let e=null;if(S.isSupported()){this.loadingService.updateProgress({phase:"Checking cache...",percentage:5});let i=performance.now(),t=yield this.indexedDBService.isCSVCacheValid(),r=performance.now()-i;if(t){this.loadingService.updateProgress({phase:"Loading from cache...",percentage:15});let s=performance.now();e=yield this.indexedDBService.loadCSVDataCache();let o=performance.now()-s;this.loadingService.updateProgress({phase:"Cache loaded successfully",percentage:85})}else this.loadingService.updateProgress({phase:"Cache invalid, loading CSV files...",percentage:12}),e=yield this.loadFromCSVFilesWithProgress(),e&&(yield this.saveToIndexedDB(e))}else e=yield this.loadFromCSVFilesWithProgress();this.loadingService.updateProgress({phase:"Loading into memory...",percentage:95}),this.loadDataIntoMemory(e),this.loadingService.updateProgress({phase:"Initializing cache...",percentage:98}),this.initializeCache(),this.loadingService.updateProgress({phase:"Completed!",percentage:100}),this.dataLoaded.next(!0),this.dataLoading=!1,setTimeout(()=>{this.loadingService.hideLoading()},1e3)}catch(e){console.error("Error loading data:",e),this.loadingService.hideLoading(),this.dataLoaded.next(!0),this.dataLoading=!1}}})}loadFromCSVFilesWithProgress(){return y(this,null,function*(){this.loadingService.updateProgress({phase:"Loading manifest...",percentage:20});let e;try{let n=yield this.http.get("assets/data/manifest.json",{responseType:"text"}).toPromise();e=JSON.parse(n||"{}")}catch{console.warn("No manifest file found, assuming single files for all CSVs"),e={inventories:1,inventory_parts:1,inventory_minifigs:1,inventory_sets:1,parts:1,colors:1,part_categories:1,part_relationships:1,elements:1,minifigs:1,sets:1,themes:1}}this.loadingService.updateProgress({phase:"Preparing file requests...",percentage:22});let i=[{key:"inventories",baseName:"inventories"},{key:"inventoryParts",baseName:"inventory_parts"},{key:"inventoryMinifigs",baseName:"inventory_minifigs"},{key:"inventorySets",baseName:"inventory_sets"},{key:"parts",baseName:"parts"},{key:"colors",baseName:"colors"},{key:"partCategories",baseName:"part_categories"},{key:"partRelationships",baseName:"part_relationships"},{key:"elements",baseName:"elements"},{key:"minifigs",baseName:"minifigs"},{key:"sets",baseName:"sets"},{key:"themes",baseName:"themes"}],t=0;i.forEach(({baseName:n})=>{t+=e[n]||1}),this.loadingService.updateProgress({phase:`Downloading ${t} CSV files...`,percentage:25,current:0,total:t});let r=[],s=0;for(let{key:n,baseName:c}of i){let a=e[c]||1;if(a===1){let h=`assets/data/${c}.csv`;try{let l=yield this.http.get(h,{responseType:"text"}).pipe(x(n==="inventoryParts"?12e4:6e4)).toPromise();r.push({key:n,csv:l,part:1,totalParts:1}),s++;let v=Math.round(25+s/t*20);this.loadingService.updateProgress({phase:`Downloaded ${c}.csv`,percentage:v,current:s,total:t})}catch(l){console.error(`Failed to download ${h}:`,l),r.push({key:n,csv:"",part:1,totalParts:1}),s++}}else for(let h=1;h<=a;h++){let l=`assets/data/${c}_part_${h}.csv`;try{let v=yield this.http.get(l,{responseType:"text"}).pipe(x(6e4)).toPromise();r.push({key:n,csv:v,part:h,totalParts:a}),s++;let b=Math.round(25+s/t*20);this.loadingService.updateProgress({phase:`Downloaded ${c}_part_${h}.csv`,percentage:b,current:s,total:t})}catch(v){console.error(`Failed to download ${l}:`,v),r.push({key:n,csv:"",part:h,totalParts:a}),s++}}}this.loadingService.updateProgress({phase:"Processing CSV data...",percentage:45});let o={};i.forEach(({key:n})=>{o[n]=[]});let p=new Map;r.forEach(n=>{n&&n.csv&&(p.has(n.key)||p.set(n.key,[]),p.get(n.key).push(n))});let u=0,d=p.size;for(let[n,c]of p){try{let a=Math.round(45+u/d*5);if(this.loadingService.updateProgress({phase:`Processing ${n}...`,percentage:a,current:u+1,total:d}),c.length===1)o[n]=this.parseCSV(c[0].csv),console.log(`Parsed ${n}: ${o[n].length} records`);else{console.log(`Combining ${c.length} parts for ${n}`),c.sort((l,v)=>l.part-v.part);let h=[];for(let l=0;l<c.length;l++){let v=c[l],b=this.parseCSV(v.csv);if(l===0?h=[...b]:h=h.concat(b),c.length>1){let V=Math.round(45+u/d*5+(l+1)/c.length*(5/d));this.loadingService.updateProgress({phase:`Processing ${n} part ${l+1}/${c.length}...`,percentage:V})}b.length=0,l<c.length-1&&(yield new Promise(V=>setTimeout(V,10)))}o[n]=h,console.log(`Combined ${n}: ${h.length} total records`)}}catch(a){console.error(`Error parsing ${n}:`,a),o[n]=[]}u++}return this.loadingService.updateProgress({phase:"CSV processing completed",percentage:50}),o})}loadDataIntoMemory(e){this.inventories=e.inventories||[],this.inventoryParts=e.inventoryParts||[],this.inventoryMinifigs=e.inventoryMinifigs||[],this.inventorySets=e.inventorySets||[],this.parts=e.parts||[],this.colors=e.colors||[],this.partCategories=e.partCategories||[],this.partRelationships=e.partRelationships||[],this.elements=e.elements||[],this.minifigs=e.minifigs||[],this.sets=e.sets||[],this.themes=e.themes||[]}initializeCache(){this.cacheInitialized||(this.loadingService.updateProgress({phase:"Caching parts...",percentage:98.2}),this.parts.forEach(e=>{this.partsCache.set(e.part_num,e)}),this.loadingService.updateProgress({phase:"Caching colors...",percentage:98.4}),this.colors.forEach(e=>{this.colorsCache.set(e.id,e)}),this.loadingService.updateProgress({phase:"Caching elements...",percentage:98.6}),this.elements.forEach(e=>{this.elementsCache.set(e.element_id,e),this.elementsCache.set(`${e.part_num}_${e.color_id}`,e)}),this.loadingService.updateProgress({phase:"Caching minifigs...",percentage:98.7}),this.minifigs.forEach(e=>{this.minifigsCache.set(e.fig_num,e)}),this.loadingService.updateProgress({phase:"Indexing inventory parts...",percentage:98.8}),this.inventoryParts.forEach(e=>{this.inventoryPartsCache.has(e.inventory_id)||this.inventoryPartsCache.set(e.inventory_id,[]),this.inventoryPartsCache.get(e.inventory_id).push(e)}),this.loadingService.updateProgress({phase:"Indexing inventory minifigs...",percentage:98.9}),this.inventoryMinifigs.forEach(e=>{this.inventoryMinifigsCache.has(e.inventory_id)||this.inventoryMinifigsCache.set(e.inventory_id,[]),this.inventoryMinifigsCache.get(e.inventory_id).push(e)}),this.loadingService.updateProgress({phase:"Cache initialization complete",percentage:99}),this.cacheInitialized=!0)}refreshCSVData(){return y(this,null,function*(){try{return S.isSupported()&&(yield this.indexedDBService.clearCSVCache()),this.dataLoaded.next(!1),this.cacheInitialized=!1,this.dataLoading=!1,this.partsCache.clear(),this.colorsCache.clear(),this.elementsCache.clear(),this.minifigsCache.clear(),this.inventoryPartsCache.clear(),this.inventoryMinifigsCache.clear(),yield this.loadData(),!0}catch(e){return console.error("Error refreshing CSV data:",e),!1}})}parseCSV(e){let t=e.replace(/\r\n/g,`
`).replace(/\r/g,`
`).split(`
`);if(t.length<2)return[];let r=this.parseCSVLine(t[0]).map(o=>o.trim().replace(/\r/g,"").replace(/\n/g,"").replace(/[\u0000-\u001F\u007F-\u009F]/g,"")),s=[];for(let o=1;o<t.length;o++){let p=t[o].trim();if(p)try{let u=this.parseCSVLine(p),d={};r.forEach((n,c)=>{let a=u[c]?.trim().replace(/\r/g,"").replace(/\n/g,"");a==null||a===""||(a==="true"||a==="false"||a==="True"||a==="False"?d[n]=a.toLowerCase()==="true":!isNaN(Number(a))&&a!==""?d[n]=Number(a):d[n]=a)}),Object.keys(d).length>0&&s.push(d)}catch(u){console.warn("Error parsing CSV line:",p,u)}}return s}parseCSVLine(e){let i=[],t="",r=!1,s=0;for(;s<e.length;){let o=e[s],p=e[s+1];o==='"'&&r&&p==='"'?(t+='"',s+=2):o==='"'?(r=!r,s++):o===","&&!r?(i.push(t.trim().replace(/\r/g,"")),t="",s++):(t+=o,s++)}return i.push(t.trim().replace(/\r/g,"")),i}isDataLoaded(){return this.dataLoaded.asObservable()}getSet(e,i=1){let t=this.sets.find(r=>r.set_num===e);if(t){let r=this.inventories.filter(s=>s.set_num===e).map(s=>s.version).sort((s,o)=>s-o);return g(P(f({},t),{versions:r.length>0?r:[1]}))}return g(void 0)}getSetInventory(e,i=1){let t=this.inventories.find(r=>r.set_num===e&&r.version===i);return g(t)}getSetInventoryPartsBySetNum(e,i=1){return this.getSetInventory(e,i).pipe(C(t=>t?this.getInventoryPartsFromCache(t.id):g([])))}getSetInventoryMinifigsBySetNum(e,i=1){return this.getSetInventory(e,i).pipe(C(t=>t?this.getInventoryMinifigsFromCache(t.id):g([])))}getInventoryPartsFromCache(e){if(!this.cacheInitialized)return this.dataLoaded.pipe(_(1),C(()=>{this.cacheInitialized||this.initializeCache();let t=this.inventoryPartsCache.get(e)||[];return g(t)}));let i=this.inventoryPartsCache.get(e)||[];return g(i)}getInventoryMinifigsFromCache(e){if(!this.cacheInitialized)return this.dataLoaded.pipe(_(1),C(()=>{this.cacheInitialized||this.initializeCache();let t=this.inventoryMinifigsCache.get(e)||[];return g(t)}));let i=this.inventoryMinifigsCache.get(e)||[];return g(i)}getSetsPaginated(e=1,i=24,t,r){return this.cacheInitialized?this.getSetsPaginatedInternal(e,i,t,r):this.dataLoaded.pipe(C(()=>this.getSetsPaginatedInternal(e,i,t,r)))}getSetsPaginatedInternal(e,i,t,r){let s=new Map;this.inventories.forEach(a=>{s.has(a.set_num)||s.set(a.set_num,[]),s.get(a.set_num).push(a.version)}),s.forEach((a,h)=>{s.set(h,a.sort((l,v)=>l-v))});let o=this.sets.map(a=>P(f({},a),{versions:s.get(a.set_num)||[1]}));if(t&&t.trim()){let a=t.toLowerCase();o=o.filter(h=>h.name.toLowerCase().includes(a)||h.set_num.toLowerCase().includes(a))}r&&(o=o.filter(a=>a.year===r));let p=o.length,u=(e-1)*i,d=u+i,n=o.slice(u,d),c=d<p;return g({sets:n,totalCount:p,hasNext:c})}getCurrentParts(){return this.parts}getCurrentColors(){return this.colors}getCurrentMinifigs(){return this.minifigs}getCurrentElements(){return this.elements}getCurrentSets(){return this.sets}getCurrentInventories(){return this.inventories}getCurrentInventoryParts(){return this.inventoryParts}getCurrentThemes(){return this.themes}getPartsByNumbers(e){let i=e.map(t=>this.partsCache.get(t)).filter(t=>t!==void 0);return g(i)}getColorsByIds(e){let i=e.map(t=>this.colorsCache.get(t)).filter(t=>t!==void 0);return g(i)}getElementsByIds(e){let i=e.map(t=>this.elementsCache.get(t)).filter(t=>t!==void 0);return g(i)}getMinifigsByNumbers(e){let i=e.map(t=>this.minifigsCache.get(t)).filter(t=>t!==void 0);return g(i)}getSetsFromCSV(){return this.getSetsPaginated(1,999999).pipe(E(e=>e.sets))}getSetInventoryPartsFromCSV(e){return this.getInventoryPartsFromCache(e)}getSetInventoryMinifigsFromCSV(e){return this.getInventoryMinifigsFromCache(e)}getPartCategoriesByIds(e){let i=this.partCategories.filter(t=>e.includes(t.id));return g(i)}getThemesByIds(e){let i=this.themes.filter(t=>e.includes(t.id));return g(i)}getCSVCacheInfo(){return y(this,null,function*(){return S.isSupported()?yield this.indexedDBService.getCSVCacheInfo():{exists:!1,timestamp:void 0,age:void 0,isValid:!1}})}getCurrentDataStats(){return{inventories:this.inventories.length,inventoryParts:this.inventoryParts.length,inventoryMinifigs:this.inventoryMinifigs.length,inventorySets:this.inventorySets.length,parts:this.parts.length,colors:this.colors.length,partCategories:this.partCategories.length,partRelationships:this.partRelationships.length,elements:this.elements.length,minifigs:this.minifigs.length,sets:this.sets.length,themes:this.themes.length}}getTotalRecords(e){let i=0;return["inventories","inventoryParts","inventoryMinifigs","inventorySets","parts","colors","partCategories","partRelationships","elements","minifigs","sets","themes"].forEach(r=>{Array.isArray(e[r])&&(i+=e[r].length)}),i}saveToIndexedDB(e){return y(this,null,function*(){try{let i={inventories:e.inventories||[],inventoryParts:e.inventoryParts||[],inventoryMinifigs:e.inventoryMinifigs||[],inventorySets:e.inventorySets||[],parts:e.parts||[],colors:e.colors||[],partCategories:e.partCategories||[],partRelationships:e.partRelationships||[],elements:e.elements||[],minifigs:e.minifigs||[],sets:e.sets||[],themes:e.themes||[],timestamp:Date.now(),version:this.CSV_VERSION};yield this.indexedDBService.saveCSVDataCache(i,r=>{this.loadingService.updateProgress({phase:r.phase,percentage:50+Math.round(r.percentage*.4),current:r.current,total:r.total})});let t=yield this.indexedDBService.loadCSVDataCache();if(t){let r=this.getTotalRecords(e),s=this.getTotalRecords(t);r!==s&&(console.error("Data loss detected during save operation"),console.error(`Original total: ${r}, Verification total: ${s}, Lost: ${r-s} records`))}}catch(i){console.warn("Failed to cache CSV data to IndexedDB:",i)}})}static \u0275fac=function(i){return new(i||m)(I(T),I(N),I(S),I(L))};static \u0275prov=w({token:m,factory:m.\u0275fac,providedIn:"root"})};export{L as a,O as b};
